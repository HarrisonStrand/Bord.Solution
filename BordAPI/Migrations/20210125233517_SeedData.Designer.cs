// <auto-generated />
using System;
using BordAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BordAPI.Migrations
{
    [DbContext(typeof(BordAPIContext))]
    [Migration("20210125233517_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BordAPI.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Creators");

                    b.Property<string>("GameName");

                    b.Property<float>("GamePrice");

                    b.Property<int>("GenreId");

                    b.Property<int?>("MaxPlayers");

                    b.Property<int?>("MinAge");

                    b.Property<int?>("MinPlayers");

                    b.Property<int?>("PlayTimeMin");

                    b.HasKey("GameId");

                    b.HasIndex("GenreId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            Creators = "Oink Games",
                            GameName = "9 Tiles Panic",
                            GamePrice = 35.99f,
                            GenreId = 0,
                            MaxPlayers = 6,
                            MinAge = 12,
                            MinPlayers = 2,
                            PlayTimeMin = 30
                        },
                        new
                        {
                            GameId = 2,
                            Creators = "Hasbro",
                            GameName = "Scrabble",
                            GamePrice = 20f,
                            GenreId = 0,
                            MaxPlayers = 4,
                            MinAge = 5,
                            MinPlayers = 2,
                            PlayTimeMin = 60
                        },
                        new
                        {
                            GameId = 3,
                            Creators = "Vlaada Chvatil",
                            GameName = "Codenames",
                            GamePrice = 14.99f,
                            GenreId = 0,
                            MaxPlayers = 8,
                            MinAge = 14,
                            MinPlayers = 2,
                            PlayTimeMin = 15
                        },
                        new
                        {
                            GameId = 4,
                            Creators = "Thorsten Gimmler",
                            GameName = "Odin's Ravens",
                            GamePrice = 21.99f,
                            GenreId = 0,
                            MaxPlayers = 2,
                            MinAge = 10,
                            MinPlayers = 2,
                            PlayTimeMin = 30
                        },
                        new
                        {
                            GameId = 5,
                            Creators = "Nate French, Matthew Newman",
                            GameName = "Arkham Horror",
                            GamePrice = 44.99f,
                            GenreId = 0,
                            MaxPlayers = 2,
                            MinAge = 14,
                            MinPlayers = 1,
                            PlayTimeMin = 60
                        },
                        new
                        {
                            GameId = 6,
                            Creators = "Oleksandr Nevskiy, Oleg Sidorenko",
                            GameName = "Mysterium",
                            GamePrice = 54.99f,
                            GenreId = 0,
                            MaxPlayers = 7,
                            MinAge = 10,
                            MinPlayers = 2,
                            PlayTimeMin = 42
                        },
                        new
                        {
                            GameId = 7,
                            Creators = "Adam Kwapiński",
                            GameName = "Nemesis",
                            GamePrice = 144f,
                            GenreId = 0,
                            MaxPlayers = 5,
                            MinAge = 12,
                            MinPlayers = 1,
                            PlayTimeMin = 90
                        },
                        new
                        {
                            GameId = 8,
                            Creators = "Leslie Scott",
                            GameName = "Jenga",
                            GamePrice = 14.99f,
                            GenreId = 0,
                            MaxPlayers = 8,
                            MinAge = 6,
                            MinPlayers = 1,
                            PlayTimeMin = 20
                        },
                        new
                        {
                            GameId = 9,
                            Creators = "Annick Lobet",
                            GameName = "Zombie Kidz Evolution",
                            GamePrice = 22.99f,
                            GenreId = 0,
                            MaxPlayers = 4,
                            MinAge = 7,
                            MinPlayers = 2,
                            PlayTimeMin = 15
                        },
                        new
                        {
                            GameId = 10,
                            Creators = "Hasbro",
                            GameName = "Monopoly",
                            GamePrice = 14.99f,
                            GenreId = 0,
                            MaxPlayers = 6,
                            MinAge = 5,
                            MinPlayers = 2,
                            PlayTimeMin = 120
                        },
                        new
                        {
                            GameId = 11,
                            Creators = "Unknown",
                            GameName = "Chess",
                            GamePrice = 14.99f,
                            GenreId = 0,
                            MaxPlayers = 2,
                            MinAge = 4,
                            MinPlayers = 1,
                            PlayTimeMin = 30
                        },
                        new
                        {
                            GameId = 12,
                            Creators = "Hasbro",
                            GameName = "Risk",
                            GamePrice = 24.99f,
                            GenreId = 0,
                            MaxPlayers = 6,
                            MinAge = 8,
                            MinPlayers = 2,
                            PlayTimeMin = 90
                        });
                });

            modelBuilder.Entity("BordAPI.Models.GameGenre", b =>
                {
                    b.Property<int>("GameGenreId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GameId");

                    b.Property<int>("GenreId");

                    b.HasKey("GameGenreId");

                    b.HasIndex("GameId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");

                    b.HasData(
                        new
                        {
                            GameGenreId = 1,
                            GameId = 1,
                            GenreId = 6
                        },
                        new
                        {
                            GameGenreId = 2,
                            GameId = 2,
                            GenreId = 6
                        },
                        new
                        {
                            GameGenreId = 3,
                            GameId = 3,
                            GenreId = 3
                        },
                        new
                        {
                            GameGenreId = 4,
                            GameId = 4,
                            GenreId = 2
                        },
                        new
                        {
                            GameGenreId = 5,
                            GameId = 5,
                            GenreId = 1
                        },
                        new
                        {
                            GameGenreId = 6,
                            GameId = 6,
                            GenreId = 4
                        },
                        new
                        {
                            GameGenreId = 7,
                            GameId = 7,
                            GenreId = 1
                        },
                        new
                        {
                            GameGenreId = 8,
                            GameId = 8,
                            GenreId = 7
                        },
                        new
                        {
                            GameGenreId = 9,
                            GameId = 9,
                            GenreId = 8
                        },
                        new
                        {
                            GameGenreId = 10,
                            GameId = 10,
                            GenreId = 8
                        },
                        new
                        {
                            GameGenreId = 11,
                            GameId = 11,
                            GenreId = 2
                        },
                        new
                        {
                            GameGenreId = 12,
                            GameId = 12,
                            GenreId = 2
                        },
                        new
                        {
                            GameGenreId = 13,
                            GameId = 1,
                            GenreId = 5
                        },
                        new
                        {
                            GameGenreId = 14,
                            GameId = 2,
                            GenreId = 8
                        });
                });

            modelBuilder.Entity("BordAPI.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GenreName");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreName = "Horror"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Strategy"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Cooperative"
                        },
                        new
                        {
                            GenreId = 4,
                            GenreName = "Mystery"
                        },
                        new
                        {
                            GenreId = 5,
                            GenreName = "Comedy"
                        },
                        new
                        {
                            GenreId = 6,
                            GenreName = "Puzzle"
                        },
                        new
                        {
                            GenreId = 7,
                            GenreName = "Party"
                        },
                        new
                        {
                            GenreId = 8,
                            GenreName = "Family"
                        });
                });

            modelBuilder.Entity("BordAPI.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Experience");

                    b.Property<int>("GameId");

                    b.Property<int?>("LearningCurve");

                    b.Property<string>("Suggestion");

                    b.Property<string>("Title");

                    b.HasKey("ReviewId");

                    b.HasIndex("GameId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Experience = "WooHoo",
                            GameId = 1,
                            LearningCurve = 3,
                            Suggestion = "More people the better.",
                            Title = "9 Times the Fun"
                        },
                        new
                        {
                            ReviewId = 2,
                            Experience = "Shouldn't have watched queens gambit",
                            GameId = 11,
                            LearningCurve = 8,
                            Suggestion = "Study the greats",
                            Title = "Oldie but goodie"
                        },
                        new
                        {
                            ReviewId = 3,
                            Experience = "This game was great",
                            GameId = 4,
                            LearningCurve = 4,
                            Suggestion = "Plan ahead but don't get caught without a card.",
                            Title = "Try to fly"
                        });
                });

            modelBuilder.Entity("BordAPI.Models.Game", b =>
                {
                    b.HasOne("BordAPI.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BordAPI.Models.GameGenre", b =>
                {
                    b.HasOne("BordAPI.Models.Game", "Game")
                        .WithMany("Genres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BordAPI.Models.Genre", "Genre")
                        .WithMany("Games")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BordAPI.Models.Review", b =>
                {
                    b.HasOne("BordAPI.Models.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
